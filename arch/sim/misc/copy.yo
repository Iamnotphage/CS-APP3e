                            | # Execution begins at address 0
0x000:                      |         .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp
0x00a: 804800000000000000   |         call main
0x013: 00                   |         halt
                            | 
0x018:                      |         .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: b000000000000000     |         .quad 0x0b0
0x028: 000c000000000000     |         .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |         .quad 0x111
0x038: 2202000000000000     |         .quad 0x222
0x040: 3303000000000000     |         .quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |         irmovq  src, %rdi
0x052: 30f63000000000000000 |         irmovq  dest, %rsi
0x05c: 30f20300000000000000 |         irmovq  $3, %rdx
0x066: 807000000000000000   |         call    copy_block
0x06f: 90                   |         ret
                            | 
                            | # long copy_block(long *src, long *dest, long len)
                            | # src in %rdi, dest in %rsi, len in %rdx
0x070:                      | copy_block:
0x070: 30f90800000000000000 |         irmovq  $8, %r9
0x07a: 30faffffffffffffffff |         irmovq  $-1, %r10
0x084: 6300                 |         xorq    %rax, %rax
                            | 
0x086:                      | loop:
0x086: 6222                 |         andq    %rdx, %rdx
0x088: 73b600000000000000   |         je      exit
                            | 
0x091: 50870000000000000000 |         mrmovq  (%rdi), %r8     # %r8 is val
0x09b: 6097                 |         addq    %r9, %rdi
0x09d: 40860000000000000000 |         rmmovq  %r8, (%rsi)
0x0a7: 6096                 |         addq    %r9, %rsi
0x0a9: 6380                 |         xorq    %r8, %rax
0x0ab: 60a2                 |         addq    %r10, %rdx
0x0ad: 708600000000000000   |         jmp     loop
0x0b6:                      | exit:
0x0b6: 90                   |         ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	    .pos 0x200
0x200:                      | stack:
